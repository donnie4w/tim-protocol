/**
 * Autogenerated by Thrift Compiler (0.18.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef STUB_TYPES_H
#define STUB_TYPES_H

/* base includes */
#include <glib-object.h>
#include <thrift/c_glib/thrift_struct.h>
#include <thrift/c_glib/protocol/thrift_protocol.h>
/* custom thrift includes */

/* begin types */

/* struct TimError */
struct _TimError
{ 
  ThriftStruct parent; 

  /* public */
  gint32 code;
  gboolean __isset_code;
  gchar * info;
  gboolean __isset_info;
};
typedef struct _TimError TimError;

struct _TimErrorClass
{
  ThriftStructClass parent;
};
typedef struct _TimErrorClass TimErrorClass;

GType tim_error_get_type (void);
#define TYPE_TIM_ERROR (tim_error_get_type())
#define TIM_ERROR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_ERROR, TimError))
#define TIM_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_ERROR, TimErrorClass))
#define IS_TIM_ERROR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_ERROR))
#define IS_TIM_ERROR_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_ERROR))
#define TIM_ERROR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_ERROR, TimErrorClass))

/* struct TimAck */
struct _TimAck
{ 
  ThriftStruct parent; 

  /* public */
  gboolean ok;
  gint8 timType;
  TimError * error;
  gboolean __isset_error;
  gint64 t;
  gboolean __isset_t;
  gchar * n;
  gboolean __isset_n;
  gint64 t2;
  gboolean __isset_t2;
  gchar * n2;
  gboolean __isset_n2;
};
typedef struct _TimAck TimAck;

struct _TimAckClass
{
  ThriftStructClass parent;
};
typedef struct _TimAckClass TimAckClass;

GType tim_ack_get_type (void);
#define TYPE_TIM_ACK (tim_ack_get_type())
#define TIM_ACK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_ACK, TimAck))
#define TIM_ACK_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_ACK, TimAckClass))
#define IS_TIM_ACK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_ACK))
#define IS_TIM_ACK_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_ACK))
#define TIM_ACK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_ACK, TimAckClass))

/* struct TimReq */
struct _TimReq
{ 
  ThriftStruct parent; 

  /* public */
  gint32 rtype;
  gboolean __isset_rtype;
  gchar * node;
  gboolean __isset_node;
  gchar * node2;
  gboolean __isset_node2;
  gint64 reqInt;
  gboolean __isset_reqInt;
  gint64 reqInt2;
  gboolean __isset_reqInt2;
  gchar * reqStr;
  gboolean __isset_reqStr;
  gchar * reqStr2;
  gboolean __isset_reqStr2;
};
typedef struct _TimReq TimReq;

struct _TimReqClass
{
  ThriftStructClass parent;
};
typedef struct _TimReqClass TimReqClass;

GType tim_req_get_type (void);
#define TYPE_TIM_REQ (tim_req_get_type())
#define TIM_REQ(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_REQ, TimReq))
#define TIM_REQ_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_REQ, TimReqClass))
#define IS_TIM_REQ(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_REQ))
#define IS_TIM_REQ_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_REQ))
#define TIM_REQ_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_REQ, TimReqClass))

/* struct Tid */
struct _Tid
{ 
  ThriftStruct parent; 

  /* public */
  gchar * node;
  gchar * domain;
  gboolean __isset_domain;
  gchar * resource;
  gboolean __isset_resource;
  gint8 termtyp;
  gboolean __isset_termtyp;
  GHashTable * extend;
  gboolean __isset_extend;
};
typedef struct _Tid Tid;

struct _TidClass
{
  ThriftStructClass parent;
};
typedef struct _TidClass TidClass;

GType tid_get_type (void);
#define TYPE_TID (tid_get_type())
#define TID(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TID, Tid))
#define TID_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TID, TidClass))
#define IS_TID(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TID))
#define IS_TID_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TID))
#define TID_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TID, TidClass))

/* struct TimUserBean */
struct _TimUserBean
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  gchar * nickName;
  gboolean __isset_nickName;
  gchar * brithday;
  gboolean __isset_brithday;
  gint8 gender;
  gboolean __isset_gender;
  gchar * cover;
  gboolean __isset_cover;
  gchar * area;
  gboolean __isset_area;
  gint64 createtime;
  gboolean __isset_createtime;
  GPtrArray * photoTidAlbum;
  gboolean __isset_photoTidAlbum;
  GHashTable * extend;
  gboolean __isset_extend;
  GHashTable * extra;
  gboolean __isset_extra;
};
typedef struct _TimUserBean TimUserBean;

struct _TimUserBeanClass
{
  ThriftStructClass parent;
};
typedef struct _TimUserBeanClass TimUserBeanClass;

GType tim_user_bean_get_type (void);
#define TYPE_TIM_USER_BEAN (tim_user_bean_get_type())
#define TIM_USER_BEAN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_USER_BEAN, TimUserBean))
#define TIM_USER_BEAN_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_USER_BEAN, TimUserBeanClass))
#define IS_TIM_USER_BEAN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_USER_BEAN))
#define IS_TIM_USER_BEAN_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_USER_BEAN))
#define TIM_USER_BEAN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_USER_BEAN, TimUserBeanClass))

/* struct TimRoomBean */
struct _TimRoomBean
{ 
  ThriftStruct parent; 

  /* public */
  gchar * founder;
  gboolean __isset_founder;
  GPtrArray * managers;
  gboolean __isset_managers;
  gchar * cover;
  gboolean __isset_cover;
  gchar * topic;
  gboolean __isset_topic;
  gchar * label;
  gboolean __isset_label;
  gint8 gtype;
  gboolean __isset_gtype;
  gint64 kind;
  gboolean __isset_kind;
  gint64 createtime;
  gboolean __isset_createtime;
  GHashTable * extend;
  gboolean __isset_extend;
  GHashTable * extra;
  gboolean __isset_extra;
};
typedef struct _TimRoomBean TimRoomBean;

struct _TimRoomBeanClass
{
  ThriftStructClass parent;
};
typedef struct _TimRoomBeanClass TimRoomBeanClass;

GType tim_room_bean_get_type (void);
#define TYPE_TIM_ROOM_BEAN (tim_room_bean_get_type())
#define TIM_ROOM_BEAN(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_ROOM_BEAN, TimRoomBean))
#define TIM_ROOM_BEAN_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_ROOM_BEAN, TimRoomBeanClass))
#define IS_TIM_ROOM_BEAN(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_ROOM_BEAN))
#define IS_TIM_ROOM_BEAN_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_ROOM_BEAN))
#define TIM_ROOM_BEAN_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_ROOM_BEAN, TimRoomBeanClass))

/* struct TimAuth */
struct _TimAuth
{ 
  ThriftStruct parent; 

  /* public */
  gchar * name;
  gboolean __isset_name;
  gchar * pwd;
  gboolean __isset_pwd;
  gchar * domain;
  gboolean __isset_domain;
  gchar * resource;
  gboolean __isset_resource;
  gint8 termtyp;
  gboolean __isset_termtyp;
  gint64 token;
  gboolean __isset_token;
  GHashTable * extend;
  gboolean __isset_extend;
};
typedef struct _TimAuth TimAuth;

struct _TimAuthClass
{
  ThriftStructClass parent;
};
typedef struct _TimAuthClass TimAuthClass;

GType tim_auth_get_type (void);
#define TYPE_TIM_AUTH (tim_auth_get_type())
#define TIM_AUTH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_AUTH, TimAuth))
#define TIM_AUTH_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_AUTH, TimAuthClass))
#define IS_TIM_AUTH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_AUTH))
#define IS_TIM_AUTH_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_AUTH))
#define TIM_AUTH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_AUTH, TimAuthClass))

/* struct TimPresence */
struct _TimPresence
{ 
  ThriftStruct parent; 

  /* public */
  gint64 id;
  gboolean __isset_id;
  gboolean offline;
  gboolean __isset_offline;
  gint8 subStatus;
  gboolean __isset_subStatus;
  Tid * fromTid;
  gboolean __isset_fromTid;
  Tid * toTid;
  gboolean __isset_toTid;
  GPtrArray * toList;
  gboolean __isset_toList;
  gint16 show;
  gboolean __isset_show;
  gchar * status;
  gboolean __isset_status;
  GHashTable * extend;
  gboolean __isset_extend;
  GHashTable * extra;
  gboolean __isset_extra;
};
typedef struct _TimPresence TimPresence;

struct _TimPresenceClass
{
  ThriftStructClass parent;
};
typedef struct _TimPresenceClass TimPresenceClass;

GType tim_presence_get_type (void);
#define TYPE_TIM_PRESENCE (tim_presence_get_type())
#define TIM_PRESENCE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_PRESENCE, TimPresence))
#define TIM_PRESENCE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_PRESENCE, TimPresenceClass))
#define IS_TIM_PRESENCE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_PRESENCE))
#define IS_TIM_PRESENCE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_PRESENCE))
#define TIM_PRESENCE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_PRESENCE, TimPresenceClass))

/* struct TimMessage */
struct _TimMessage
{ 
  ThriftStruct parent; 

  /* public */
  gint8 msType;
  gint8 odType;
  gint64 id;
  gboolean __isset_id;
  gint64 mid;
  gboolean __isset_mid;
  gint32 bnType;
  gboolean __isset_bnType;
  Tid * fromTid;
  gboolean __isset_fromTid;
  Tid * toTid;
  gboolean __isset_toTid;
  Tid * roomTid;
  gboolean __isset_roomTid;
  GByteArray * dataBinary;
  gboolean __isset_dataBinary;
  gchar * dataString;
  gboolean __isset_dataString;
  gboolean isOffline;
  gboolean __isset_isOffline;
  gint64 timestamp;
  gboolean __isset_timestamp;
  gint16 udtype;
  gboolean __isset_udtype;
  gint16 udshow;
  gboolean __isset_udshow;
  GHashTable * extend;
  gboolean __isset_extend;
  GHashTable * extra;
  gboolean __isset_extra;
};
typedef struct _TimMessage TimMessage;

struct _TimMessageClass
{
  ThriftStructClass parent;
};
typedef struct _TimMessageClass TimMessageClass;

GType tim_message_get_type (void);
#define TYPE_TIM_MESSAGE (tim_message_get_type())
#define TIM_MESSAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_MESSAGE, TimMessage))
#define TIM_MESSAGE_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_MESSAGE, TimMessageClass))
#define IS_TIM_MESSAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_MESSAGE))
#define IS_TIM_MESSAGE_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_MESSAGE))
#define TIM_MESSAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_MESSAGE, TimMessageClass))

/* struct TimStream */
struct _TimStream
{ 
  ThriftStruct parent; 

  /* public */
  gint64 id;
  gchar * VNode;
  gint8 dtype;
  gboolean __isset_dtype;
  GByteArray * body;
  gboolean __isset_body;
  gchar * fromNode;
};
typedef struct _TimStream TimStream;

struct _TimStreamClass
{
  ThriftStructClass parent;
};
typedef struct _TimStreamClass TimStreamClass;

GType tim_stream_get_type (void);
#define TYPE_TIM_STREAM (tim_stream_get_type())
#define TIM_STREAM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_STREAM, TimStream))
#define TIM_STREAM_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_STREAM, TimStreamClass))
#define IS_TIM_STREAM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_STREAM))
#define IS_TIM_STREAM_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_STREAM))
#define TIM_STREAM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_STREAM, TimStreamClass))

/* struct TimNodes */
struct _TimNodes
{ 
  ThriftStruct parent; 

  /* public */
  gint32 ntype;
  GPtrArray * nodelist;
  gboolean __isset_nodelist;
  GHashTable * usermap;
  gboolean __isset_usermap;
  GHashTable * roommap;
  gboolean __isset_roommap;
  gchar * node;
  gboolean __isset_node;
};
typedef struct _TimNodes TimNodes;

struct _TimNodesClass
{
  ThriftStructClass parent;
};
typedef struct _TimNodesClass TimNodesClass;

GType tim_nodes_get_type (void);
#define TYPE_TIM_NODES (tim_nodes_get_type())
#define TIM_NODES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_NODES, TimNodes))
#define TIM_NODES_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_NODES, TimNodesClass))
#define IS_TIM_NODES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_NODES))
#define IS_TIM_NODES_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_NODES))
#define TIM_NODES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_NODES, TimNodesClass))

/* struct TimMessageList */
struct _TimMessageList
{ 
  ThriftStruct parent; 

  /* public */
  gint64 id;
  gboolean __isset_id;
  GPtrArray * messageList;
  gboolean __isset_messageList;
};
typedef struct _TimMessageList TimMessageList;

struct _TimMessageListClass
{
  ThriftStructClass parent;
};
typedef struct _TimMessageListClass TimMessageListClass;

GType tim_message_list_get_type (void);
#define TYPE_TIM_MESSAGE_LIST (tim_message_list_get_type())
#define TIM_MESSAGE_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_TIM_MESSAGE_LIST, TimMessageList))
#define TIM_MESSAGE_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_CAST ((c), _TYPE_TIM_MESSAGE_LIST, TimMessageListClass))
#define IS_TIM_MESSAGE_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_TIM_MESSAGE_LIST))
#define IS_TIM_MESSAGE_LIST_CLASS(c) (G_TYPE_CHECK_CLASS_TYPE ((c), TYPE_TIM_MESSAGE_LIST))
#define TIM_MESSAGE_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_TIM_MESSAGE_LIST, TimMessageListClass))

/* constants */

#endif /* STUB_TYPES_H */
